{"ast":null,"code":"var _jsxFileName = \"/Users/anasmuhammad/empdirect/empdirect/src/components/ListHead/index.js\";\nimport React from \"react\";\nimport \"./style.css\";\nimport Card from '../Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListHead extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      alphabetical: true,\n      ascending: true,\n      sortedEmployees: [],\n      employees: []\n    };\n\n    this.sortName = () => {\n      let sortEmp = [];\n\n      if (this.state.alphabetical) {\n        sortEmp = this.props.empList.sort((a, b) => {\n          var nameA = a.name.last.toLowerCase(),\n              nameB = b.name.last.toLowerCase();\n          if (nameA < nameB) return -1;\n          if (nameA > nameB) return 1;\n          return 0;\n        });\n      } else {\n        sortEmp = this.props.empList.sort((a, b) => {\n          var nameA = a.name.last.toLowerCase(),\n              nameB = b.name.last.toLowerCase();\n          if (nameA > nameB) return -1;\n          if (nameA < nameB) return 1;\n          return 0;\n        });\n      }\n\n      this.setState({\n        alphabetical: !this.state.alphabetical,\n        sortedEmployees: sortEmp\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.sortedEmployees.length < 1) {\n      this.setState({\n        sortedEmployees: this.props.empList\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.empList !== prevProps.empList) {\n      this.setState({\n        sortedEmployees: this.props.empList\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: this.sortName,\n            className: \"name\",\n            children: \"Name (A-Z)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"p\",\n          children: \"Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"S\",\n          children: \"State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"A\",\n          children: \"Age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"E\",\n          children: \"E-mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"P\",\n          children: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), this.state.sortedEmployees.length > 0 && this.state.sortedEmployees.map((item, index) => /*#__PURE__*/_jsxDEV(Card, {\n        first: item.name.first,\n        last: item.name.last,\n        image: item.picture.medium,\n        title: item.name.title,\n        gender: item.location.state,\n        age: item.dob.age,\n        email: item.email,\n        phone: item.cell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListHead;","map":{"version":3,"sources":["/Users/anasmuhammad/empdirect/empdirect/src/components/ListHead/index.js"],"names":["React","Card","ListHead","Component","state","alphabetical","ascending","sortedEmployees","employees","sortName","sortEmp","props","empList","sort","a","b","nameA","name","last","toLowerCase","nameB","setState","componentDidMount","length","componentDidUpdate","prevProps","render","map","item","index","first","picture","medium","title","location","dob","age","email","cell"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\nimport Card from '../Card';\n\nclass ListHead extends React.Component {\n\n    state = {\n        alphabetical: true,\n        ascending: true,\n        sortedEmployees: [],\n        employees: []\n    }\n\n    componentDidMount() {\n        if (this.state.sortedEmployees.length < 1) {\n            this.setState({\n                sortedEmployees: this.props.empList\n            })\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.empList !== prevProps.empList) {\n            this.setState({\n                sortedEmployees: this.props.empList\n            })\n        }\n    }\n\n    sortName = () => {\n        let sortEmp = [];\n        if (this.state.alphabetical) {\n            sortEmp = this.props.empList.sort((a, b) => {\n                var nameA = a.name.last.toLowerCase(), nameB = b.name.last.toLowerCase();\n                if (nameA < nameB)\n                    return -1\n                if (nameA > nameB)\n                    return 1\n                return 0\n            })\n        } else {\n            sortEmp = this.props.empList.sort((a, b) => {\n                var nameA = a.name.last.toLowerCase(), nameB = b.name.last.toLowerCase();\n                if (nameA > nameB)\n                    return -1\n                if (nameA < nameB)\n                    return 1\n                return 0\n            })\n        }\n        this.setState({\n            alphabetical: !this.state.alphabetical,\n            sortedEmployees: sortEmp\n\n        })\n    }\n\n    render() {\n        return (\n\n            <div>\n                <div className=\"header\">\n                    <div><p onClick={this.sortName} className=\"name\">Name (A-Z)</p></div>\n                    <div class=\"p\">Photo</div>\n                    <div class=\"S\">State</div>\n                    <div class=\"A\">Age</div>\n                    <div class=\"E\">E-mail</div>\n                    <div class=\"P\">Phone</div>\n                </div>\n\n                {\n                    this.state.sortedEmployees.length > 0 &&\n                    this.state.sortedEmployees.map((item, index) => (\n\n                            <Card\n                                first={item.name.first}\n                                last={item.name.last}\n                                image={item.picture.medium}\n                                title={item.name.title}\n                                gender={item.location.state}\n                                age={item.dob.age}\n                                email={item.email}\n                                phone={item.cell}\n                            />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nexport default ListHead;"]},"metadata":{},"sourceType":"module"}